// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchEngineKeywordTracker.DataAccessLayer.Contexts;

namespace SearchEngineKeywordTracker.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngineSearchPositions", b =>
                {
                    b.Property<int>("SearchEngineSearchPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionNumber")
                        .HasColumnType("int");

                    b.Property<int>("SearchEngineSearchId")
                        .HasColumnType("int");

                    b.HasKey("SearchEngineSearchPositionId");

                    b.HasIndex("SearchEngineSearchId");

                    b.ToTable("SearchEngineSearchPositions");
                });

            modelBuilder.Entity("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngineSearches", b =>
                {
                    b.Property<int>("SearchEngineSearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SearchDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SearchEngineId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SearchEngineSearchId");

                    b.HasIndex("SearchEngineId");

                    b.ToTable("SearchEngineSearches");
                });

            modelBuilder.Entity("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngines", b =>
                {
                    b.Property<int>("SearchEngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SearchEngineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SearchEngineId");

                    b.ToTable("SearchEngines");
                });

            modelBuilder.Entity("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngineSearchPositions", b =>
                {
                    b.HasOne("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngineSearches", "SearchEngineSearches")
                        .WithMany()
                        .HasForeignKey("SearchEngineSearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SearchEngineSearches");
                });

            modelBuilder.Entity("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngineSearches", b =>
                {
                    b.HasOne("SearchEngineKeywordTracker.DataAccessLayer.Entities.SearchEngines", "SearchEngines")
                        .WithMany()
                        .HasForeignKey("SearchEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SearchEngines");
                });
#pragma warning restore 612, 618
        }
    }
}
